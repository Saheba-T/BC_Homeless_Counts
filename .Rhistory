shiny::runApp('code/03_shiny_app')
runApp('code/03_shiny_app')
runApp('code/03_shiny_app')
shiny::runApp('code/03_shiny_app')
runApp('code/03_shiny_app')
runApp('code/03_shiny_app')
runApp('code/03_shiny_app')
runApp('code/03_shiny_app')
shiny::runApp('code/03_shiny_app')
runApp('code/03_shiny_app')
runApp('code/03_shiny_app')
shiny::runApp('code/03_shiny_app')
runApp()
runApp()
shiny::runApp('code/03_shiny_app')
runApp('code/03_shiny_app')
library(tidyverse)
library(here)
# get path of current working directory
prj_dir <- here()
# names of data tables pertaining to all communities
names_ls1 <- paste0("table2.",1:23)
# names of data tables gathered across communities
names_ls2 <- paste0("table3.",1:9)
# combine the two lists of names into a single list
table_names <- append(names_ls1,names_ls2)
# read in from csv files and store raw data into data frames
for (i in table_names){
filename <- paste0(prj_dir,"/data/raw_data/",i,".csv")
assign(i,read_csv(filename))
}
View(table2.16)
colnames(table2.16)
304/1921
1579/3946
table2.16_c <- table2.16[-c(1,15,16,17),] %>%
rename("Services_Accessed" = "Services.Accessed..more.than.1",
"Total_Sheltered" = "X",
"Percent_Sheltered" = "Sheltered",
"Total_Unsheltered" = "Unsheltered",
"Percent_Unsheltered" = "X.1",
"Total_Respondents" = "X.2",
"Percent_Respondents" = "Total") %>%
mutate_at(.vars = vars(starts_with("Total")),
.funs = list(~ as.numeric(gsub(",","",.)))) %>%
mutate_at(.vars = vars(starts_with("Percent")),
.funs = list(~ as.numeric(gsub("%","",.))))
View(table2.16_c)
#-------------------
## Save cleaned data frames as csv in clean_data folder
clean_table_names <- c("table1_c","table2.2_c","table2.4_c","table2.6_c",
"table2.10_c","table2.11_c","table2.12_c","table2.15_c",
"table2.17_c","table2.18_c","table3.1_c","table3.9_c",
"table2.16_c")
for (t in clean_table_names){
filename <- paste0("data/clean_data/",t,".csv")
if (!file.exists(filename)){
df <- get(t)
write_csv(df, filename)
}
}
shiny::runApp('code/03_shiny_app')
runApp('code/03_shiny_app')
shiny::runApp('code/03_shiny_app')
shiny::runApp('code/03_shiny_app')
library(tidyverse)
library(leaflet)
library(htmltools)
library(here)
library(shiny)
library(shinydashboard)
# load all csv files from clean_data folder into a list of data frames
my_files <- list.files(path = paste0(here(),"/data/clean_data"))
my_files
?lapply
?list.files
# load all csv files from clean_data folder into a list of data frames
my_files <- list.files(path = paste0(here(),"/data/clean_data"),
full.names = TRUE)
my_files
my_data <- lapply(my_files,read.csv)
View(my_data)
my_data[[1]]
View(my_data)
my_data[[1]]
my_files
runApp('code/03_shiny_app')
shiny::runApp('code/03_shiny_app')
runApp('code/03_shiny_app')
runApp('code/03_shiny_app')
runApp('code/03_shiny_app')
runApp('code/03_shiny_app')
runApp('code/03_shiny_app')
library(tidyverse)
library(leaflet)
library(htmltools)
library(here)
library(shiny)
library(shinydashboard)
# Load all csv files from clean_data folder into a list of data frames
my_files <- list.files(path = paste0(here(),"/data/clean_data"),
full.names = TRUE)
my_data <- lapply(my_files,read.csv)
# function to prepare data frame for further manipulation and plotting
prep_data <- function(df,df_subject_variable){
df %>%
# select percentage variables and variable of current subject
select(any_of(df_subject_variable, contains("Percent"),contains("2018"))) %>%
# pivot percentage columns as values of a single variable
pivot_longer(cols = any_of(contains("Percent"),contains("2018")),
names_to = "type",
values_to = "Percentage") %>%
# modify the values of type column
mutate_at(.vars = vars("type"),
.funs = list(~ str_to_title(gsub(".*_","",.))))
}
df <- prep_data(my_data[[9]])
df <- prep_data(my_data[[9]],"Gender_identity")
library(tidyverse)
library(leaflet)
library(htmltools)
library(here)
library(shiny)
library(shinydashboard)
# Load all csv files from clean_data folder into a list of data frames
my_files <- list.files(path = paste0(here(),"/data/clean_data"),
full.names = TRUE)
my_data <- lapply(my_files,read.csv)
# function to prepare data frame for further manipulation and plotting
prep_data <- function(df,df_subject_variable){
df %>%
# select percentage variables and variable of current subject
select(any_of(df_subject_variable, contains("Percent"),contains("2018"))) %>%
# pivot percentage columns as values of a single variable
pivot_longer(cols = any_of(contains("Percent"),contains("2018")),
names_to = "type",
values_to = "Percentage") %>%
# modify the values of type column
mutate_at(.vars = vars("type"),
.funs = list(~ str_to_title(gsub(".*_","",.))))
}
library(tidyverse)
library(leaflet)
library(htmltools)
library(here)
library(shiny)
library(shinydashboard)
# Load all csv files from clean_data folder into a list of data frames
my_files <- list.files(path = paste0(here(),"/data/clean_data"),
full.names = TRUE)
my_data <- lapply(my_files,read.csv)
# function to prepare data frame for further manipulation and plotting
prep_data <- function(df,df_subject_variable){
df %>%
# select percentage variables and variable of current subject
select(any_of(df_subject_variable, contains("Percent"),contains("2018"))) %>%
# pivot percentage columns as values of a single variable
pivot_longer(cols = any_of(contains("Percent"),contains("2018")),
names_to = "type",
values_to = "Percentage") %>%
# modify the values of type column
mutate_at(.vars = vars("type"),
.funs = list(~ str_to_title(gsub(".*_","",.))))
}
prep_data(my_data[[9]],"Gender_identity")
# function to prepare data frame for further manipulation and plotting
prep_data <- function(df){
df %>%
# select percentage variables and variable of current subject
select(any_of(contains("Percent"),contains("2018"))) %>%
# pivot percentage columns as values of a single variable
pivot_longer(cols = any_of(contains("Percent"),contains("2018")),
names_to = "type",
values_to = "Percentage") %>%
# modify the values of type column
mutate_at(.vars = vars("type"),
.funs = list(~ str_to_title(gsub(".*_","",.))))
}
prep_data(my_data[[9]])
# function to prepare data frame for further manipulation and plotting
prep_data <- function(df){
df <- as.data.frame(df)
df %>%
# select percentage variables and variable of current subject
select(any_of(contains("Percent"),contains("2018"))) %>%
# pivot percentage columns as values of a single variable
pivot_longer(cols = any_of(contains("Percent"),contains("2018")),
names_to = "type",
values_to = "Percentage") %>%
# modify the values of type column
mutate_at(.vars = vars("type"),
.funs = list(~ str_to_title(gsub(".*_","",.))))
}
prep_data(my_data[[9]])
# function to prepare data frame for further manipulation and plotting
prep_data <- function(){
# select percentage variables and variable of current subject
select(any_of(contains("Percent"),contains("2018"))) %>%
# pivot percentage columns as values of a single variable
pivot_longer(cols = any_of(contains("Percent"),contains("2018")),
names_to = "type",
values_to = "Percentage") %>%
# modify the values of type column
mutate_at(.vars = vars("type"),
.funs = list(~ str_to_title(gsub(".*_","",.))))
}
my_data[[9]] %>%
prep_data()
# This file contains all the global objects used by the UI and Server
# Load all required libraries
library(tidyverse)
library(leaflet)
library(htmltools)
library(here)
library(shiny)
library(shinydashboard)
# Load all csv files from clean_data folder into a list of data frames
my_files <- list.files(path = paste0(here(),"/data/clean_data"),
full.names = TRUE)
my_data <- lapply(my_files,read.csv)
#
prep_data <- function(df, subject_var){
subject_var <- enquo(subject_var)
df %>%
select(any_of(subject_var,contains("Percent"), contains("2018")))
}
prep_data(my_data[[9]])
prep_data(my_data[[9]],"Gender_identity")
#
prep_data <- function(df, subject_var){
subject_var <- enquo(subject_var)
df %>%
select(any_of(!! subject_var,contains("Percent"), contains("2018")))
}
prep_data(my_data[[9]],"Gender_identity")
#
prep_data <- function(df, subject_var){
subject_var <- enquo(subject_var)
df %>%
select(any_of(!! subject_var,contains("Percent"), contains("2018")))
}
prep_data(my_data[[9]],"Gender_identity")
shiny::runApp('code/03_shiny_app')
library(tidyverse)
library(leaflet)
library(htmltools)
library(here)
library(shiny)
library(shinydashboard)
# Load all csv files from clean_data folder into a list of data frames
my_files <- list.files(path = paste0(here(),"/data/clean_data"),
full.names = TRUE)
my_data <- lapply(my_files,read.csv)
test <- function(df, varname){
df[,varname]
}
test(my_data[[9]], "Gender_identity")
test <- function(df, varname){
df %>%
select(varname)
}
test(my_data[[9]], "Gender_identity")
test <- function(df, varname){
df %>%
select(varname, contains("Percent"))
}
test(my_data[[9]], "Gender_identity")
test <- function(df, varname){
df %>%
select(varname, contains("Percent"), contains("2018"))
}
test(my_data[[9]], "Gender_identity")
test <- function(df, varname){
df %>%
select(any_of(c(varname, contains("Percent"), contains("2018"))))
}
test(my_data[[9]], "Gender_identity")
# Function to prepare data for visualization
prep_data <- function(df, subject_var){
df %>%
select(any_of(c(varname, contains("Percent"), contains("2018")))) %>%
pivot_longer(cols = any_of(c(contains("Percent"),contains("2018"))),
names_to = "type",
values_to = "Percentage") %>%
mutate_at(.vars = vars("type"),
.funs = list(~ str_to_title(gsub(".*_","",.)))
)
}
prep_data(my_data[[9]], "Gender_identity")
# Function to prepare data for visualization
prep_data <- function(df, subject_var){
df %>%
select(any_of(c(subject_var, contains("Percent"), contains("2018")))) %>%
pivot_longer(cols = any_of(c(contains("Percent"),contains("2018"))),
names_to = "type",
values_to = "Percentage") %>%
mutate_at(.vars = vars("type"),
.funs = list(~ str_to_title(gsub(".*_","",.)))
)
}
prep_data(my_data[[9]], "Gender_identity")
?vars
# Function to prepare data for visualization
prep_data <- function(df, subject_var){
df %>%
select(any_of(c(subject_var, contains("Percent"), contains("2018")))) %>%
pivot_longer(cols = vars(any_of(c(contains("Percent"),contains("2018")))),
names_to = "type",
values_to = "percentage") %>%
mutate_at(.vars = vars("type"),
.funs = list(~ str_to_title(gsub(".*_","",.)))
)
}
prep_data(my_data[[9]], "Gender_identity")
# Function to prepare data for visualization
prep_data <- function(df, subject_var){
df %>%
select(any_of(c(subject_var, contains("Percent"), contains("2018")))) %>%
pivot_longer(cols = contains("Percent"),
names_to = "type",
values_to = "percentage") %>%
mutate_at(.vars = vars("type"),
.funs = list(~ str_to_title(gsub(".*_","",.)))
)
}
prep_data(my_data[[9]], "Gender_identity")
# Function to prepare data for visualization
prep_data <- function(df, subject_var){
df %>%
select(any_of(c(subject_var, contains("Percent"), contains("2018")))) %>%
pivot_longer(cols = vars(contains("Percent")),
names_to = "type",
values_to = "percentage") %>%
mutate_at(.vars = vars("type"),
.funs = list(~ str_to_title(gsub(".*_","",.)))
)
}
prep_data(my_data[[9]], "Gender_identity")
# Function to prepare data for visualization
prep_data <- function(df, subject_var){
df %>%
select(any_of(c(subject_var, contains("Percent"), contains("2018")))) %>%
pivot_longer(cols = !subject_var,
names_to = "type",
values_to = "percentage") %>%
mutate_at(.vars = vars("type"),
.funs = list(~ str_to_title(gsub(".*_","",.)))
)
}
prep_data(my_data[[9]], "Gender_identity")
# Function to prepare data for visualization
prep_data <- function(df, subject_var){
df %>%
select(any_of(c(subject_var, contains("Percent"), contains("2018")))) %>%
pivot_longer(cols = !subject_var,
names_to = "type",
values_to = "percentage")
}
prep_data(my_data[[9]], "Gender_identity")
# Function to prepare data for visualization
prep_data <- function(df, subject_var){
df %>%
select(any_of(c(subject_var, contains("Percent"), contains("2018")))) %>%
pivot_longer(cols = -all_of(subject_var),
names_to = "type",
values_to = "percentage")
}
prep_data(my_data[[9]], "Gender_identity")
# Function to prepare data for visualization
prep_data <- function(df, subject_var){
df %>%
select(any_of(c(subject_var, contains("Percent"), contains("2018")))) %>%
pivot_longer(-all_of(subject_var),
names_to = "type",
values_to = "percentage")
}
prep_data(my_data[[9]], "Gender_identity")
# Function to prepare data for visualization
prep_data <- function(df, subject_var){
df %>%
select(any_of(c(subject_var, contains("Percent"), contains("2018"))))
}
prep_data(my_data[[9]], "Gender_identity")
# Function to prepare data for visualization
prep_data <- function(df, subject_var){
df %>%
select(all_of(c(subject_var,contains("Percent"))),
any_of(contains("2018"))
)
}
prep_data(my_data[[9]], "Gender_identity")
# Function to prepare data for visualization
prep_data <- function(df, subject_var){
df %>%
select(subject_var,contains("Percent"))
}
prep_data(my_data[[9]], "Gender_identity")
?select_if
# Function to prepare data for visualization
prep_data <- function(df, subject_var){
df %>%
select(subject_var,contains("Percent") | contains("2018"))
}
prep_data(my_data[[9]], "Gender_identity")
# Function to prepare data for visualization
prep_data <- function(df, subject_var){
df %>%
select(subject_var |contains("Percent") | contains("2018"))
}
prep_data(my_data[[9]], "Gender_identity")
# Function to prepare data for visualization
prep_data <- function(df, subject_var){
df %>%
select(subject_var, contains("Percent") | contains("2018"))
}
prep_data(my_data[[9]], "Gender_identity")
# Function to prepare data for visualization
prep_data <- function(df, subject_var){
df %>%
select(subject_var, contains("Percent") | contains("2018")) %>%
pivot_longer(cols = - subject_var,
names_to = "type",
values_to = "percentage")
}
prep_data(my_data[[9]], "Gender_identity")
# Function to prepare data for visualization
prep_data <- function(df, subject_var){
df %>%
select(subject_var, contains("Percent") | contains("2018")) %>%
pivot_longer(cols = - subject_var,
names_to = "Type",
values_to = "Percentage") %>%
mutate_at(.vars = vars("type"),
.funs = list(~ str_to_title(gsub(".*_","",.)))
)
}
prep_data(my_data[[9]], "Gender_identity")
# Function to prepare data for visualization
prep_data <- function(df, subject_var){
df %>%
select(subject_var, contains("Percent") | contains("2018")) %>%
pivot_longer(cols = - subject_var,
names_to = "Type",
values_to = "Percentage") %>%
mutate_at(.vars = vars("type"),
.funs = list(~ gsub(".*_","",.))
)
}
prep_data(my_data[[9]], "Gender_identity")
# Function to prepare data for visualization
prep_data <- function(df, subject_var){
df %>%
select(subject_var, contains("Percent") | contains("2018")) %>%
pivot_longer(cols = - subject_var,
names_to = "Type",
values_to = "Percentage") %>%
mutate_at(.vars = vars("Type"),
.funs = list(~ str_to_tile(gsub(".*_","",.)))
)
}
prep_data(my_data[[9]], "Gender_identity")
# Function to prepare data for visualization
prep_data <- function(df, subject_var){
df %>%
select(subject_var, contains("Percent") | contains("2018")) %>%
pivot_longer(cols = - subject_var,
names_to = "Type",
values_to = "Percentage") %>%
mutate_at(.vars = vars("Type"),
.funs = list(~ gsub(".*_","",.))
)
}
prep_data(my_data[[9]], "Gender_identity")
my_files
prep_data(my_data[[10]], "Age_groups")
runApp('code/03_shiny_app')
shiny::runApp('code/03_shiny_app')
prep_data(my_data[[9]],"Gender_identity", groups())
prep_data(my_data[[9]],"Gender_identity", c("Sheltered","Unsheltered"))
prep_data(my_data[[9]],"Gender_identity", c("Sheltered","Unsheltered")) %>%
filter(!Gender_identity %in% c("Respondents","Total","Don't Know/No Answer"))
runApp('code/03_shiny_app')
my_files
prep_data(my_data[[10]], "Age_groups", c("Sheltered","Unsheltered"))
runApp('code/03_shiny_app')
runApp('code/03_shiny_app')
runApp('code/03_shiny_app')
my_files
runApp('code/03_shiny_app')
runApp('code/03_shiny_app')
runApp('code/03_shiny_app')
shiny::runApp('code/03_shiny_app')
runApp()
runApp('code/03_shiny_app')
?fct_reorder
runApp('code/03_shiny_app')
runApp('code/03_shiny_app')
library(gridExtra)
textGrob
?textGrob
library(grid)
runApp('code/03_shiny_app')
shiny::runApp('code/03_shiny_app')
runApp()
runApp('code/03_shiny_app')
runApp('code/03_shiny_app')
runApp('code/03_shiny_app')
?element_text
runApp('code/03_shiny_app')
runApp('code/03_shiny_app')
shiny::runApp('code/03_shiny_app')
runApp('code/03_shiny_app')
