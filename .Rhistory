retention <- read.csv(file = "C:\\Users\\saheb\\Desktop\\chrc_data\\retention.csv")
retention %>%
ggplot(aes(x = Year, y = customer_retention, color = as.factor(ï..Service), label = customer_retention)) +
geom_line(size = 1.3) +
geom_point(size = 2)+
scale_color_manual(values = c('#f5bf42',"#e0582f","#27b850","#b9cf59"),
name = "Service Provided") +
labs(title = "Customer Retention over Years",
subtitle = "",
caption = "Note: The data used for this image is not actual, but generated for visual purposes") +
theme_classic() +
theme(legend.position = "top",
axis.title = element_blank(),
plot.title = element_text(size = 16))
retention <- read.csv(file = "C:\\Users\\saheb\\Desktop\\chrc_data\\retention.csv")
retention %>%
ggplot(aes(x = Year, y = customer_retention, color = as.factor(ï..Service), label = customer_retention)) +
geom_line(size = 1.3) +
geom_point(size = 2)+
scale_color_manual(values = c('#f5bf42',"#e0582f","#27b850","#b9cf59"),
name = "Service Provided") +
labs(title = "Customer Retention over Years",
subtitle = "",
caption = "Note: The data used for this image is not actual, but generated for visual purposes") +
theme_classic() +
theme(legend.position = "top",
axis.title = element_blank(),
plot.title = element_text(size = 16))
retention <- read.csv(file = "C:\\Users\\saheb\\Desktop\\chrc_data\\retention.csv")
retention %>%
ggplot(aes(x = Year, y = customer_retention, color = as.factor(ï..Service), label = customer_retention)) +
geom_line(size = 1.3) +
geom_point(size = 2)+
scale_color_manual(values = c('#f5bf42',"#e0582f","#27b850","#b9cf59"),
name = "Service Provided") +
labs(title = "Customer Retention over Years",
subtitle = "",
caption = "Note: The data used for this image is not actual, but generated for visual purposes") +
theme_classic() +
theme(legend.position = "top",
axis.title = element_blank(),
plot.title = element_text(size = 16))
retention <- read.csv(file = "C:\\Users\\saheb\\Desktop\\chrc_data\\retention.csv")
retention %>%
ggplot(aes(x = Year, y = customer_retention, color = as.factor(ï..Service), label = customer_retention)) +
geom_line(size = 1.3) +
geom_point(size = 2)+
scale_color_manual(values = c('#f5bf42',"#e0582f","#27b850","#b9cf59"),
name = "Service Provided") +
labs(title = "Customer Retention over Years",
subtitle = "",
caption = "Note: The data used for this image is not actual, but generated for visual purposes") +
theme_classic() +
theme(legend.position = "top",
axis.title = element_blank(),
plot.title = element_text(size = 16))
retention %>%
ggplot(aes(x = Year, y = customer_retention, color = as.factor(ï..Service), label = customer_retention)) +
geom_line(size = 1.3) +
geom_point(size = 2)+
scale_color_manual(values = c('#f5bf42',"#e0582f","#27b850","#b9cf59"),
name = "Service Provided") +
labs(title = "Percentage of Customer Retention over Years",
subtitle = "",
caption = "Note: The data used for this image is not actual, but generated for visual purposes") +
theme_classic() +
theme(legend.position = "top",
axis.title = element_blank(),
plot.title = element_text(size = 16))
retention %>%
ggplot(aes(x = Year, y = customer_retention, color = as.factor(ï..Service), label = customer_retention)) +
geom_line(size = 1.3) +
geom_point(size = 2)+
scale_color_manual(values = c('#f5bf42',"#e0582f","#27b850","#b9cf59"),
name = "Service Provided") +
labs(title = "Percentage of Customer Retention over Years",
subtitle = "",
caption = "Note: The data used for this image is not actual, but generated for visual purposes") +
theme_classic() +
theme(legend.position = "top",
axis.title = element_blank(),
plot.title = element_text(size = 16))
View(satisfaction)
satisfaction %>%
ggplot(aes(x = reorder(ï..Service,avg_member_satisfaction),
y = avg_member_satisfaction,
fill = ï..Service,
label = scales::percent(avg_member_satisfaction/100))) +
geom_col() +
scale_fill_manual(values = c('#f5bf42',"#e0582f","#27b850","#b9cf59"),
name = "Service Provided") +
geom_text(nudge_y = -5,
color = "white",
fontface = "bold",
size = 5) +
labs(title = "Top Ranking of Services provided Based on Customer Satisfaction",
caption = "Note: The data used for this image is not actual, but generated for visual purposes") +
theme_classic() +
theme(legend.position = "none",
line = element_blank(),
axis.title = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_text(size = 12,),
plot.title = element_text(size = 15, hjust = -2)) +
coord_flip()
satisfaction %>%
ggplot(aes(x = reorder(ï..Service,avg_member_satisfaction),
y = avg_member_satisfaction,
fill = ï..Service,
label = round(scales::percent(avg_member_satisfaction/100),2))) +
geom_col() +
scale_fill_manual(values = c('#f5bf42',"#e0582f","#27b850","#b9cf59"),
name = "Service Provided") +
geom_text(nudge_y = -5,
color = "white",
fontface = "bold",
size = 5) +
labs(title = "Top Ranking of Services provided Based on Customer Satisfaction",
caption = "Note: The data used for this image is not actual, but generated for visual purposes") +
theme_classic() +
theme(legend.position = "none",
line = element_blank(),
axis.title = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_text(size = 12,),
plot.title = element_text(size = 15, hjust = -2)) +
coord_flip()
satisfaction %>%
ggplot(aes(x = reorder(ï..Service,avg_member_satisfaction),
y = avg_member_satisfaction,
fill = ï..Service,
label = scales::percent(avg_member_satisfaction/100))) +
geom_col() +
scale_fill_manual(values = c('#f5bf42',"#e0582f","#27b850","#b9cf59"),
name = "Service Provided") +
geom_text(nudge_y = -5,
color = "white",
fontface = "bold",
size = 5) +
labs(title = "Top Ranking of Services provided Based on Customer Satisfaction",
caption = "Note: The data used for this image is not actual, but generated for visual purposes") +
theme_classic() +
theme(legend.position = "none",
line = element_blank(),
axis.title = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_text(size = 12,),
plot.title = element_text(size = 15, hjust = -2)) +
coord_flip()
satisfaction %>%
ggplot(aes(x = reorder(ï..Service,avg_member_satisfaction),
y = avg_member_satisfaction,
fill = ï..Service,
label = scales::percent(round(avg_member_satisfaction/100,2)))) +
geom_col() +
scale_fill_manual(values = c('#f5bf42',"#e0582f","#27b850","#b9cf59"),
name = "Service Provided") +
geom_text(nudge_y = -5,
color = "white",
fontface = "bold",
size = 5) +
labs(title = "Top Ranking of Services provided Based on Customer Satisfaction",
caption = "Note: The data used for this image is not actual, but generated for visual purposes") +
theme_classic() +
theme(legend.position = "none",
line = element_blank(),
axis.title = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_text(size = 12,),
plot.title = element_text(size = 15, hjust = -2)) +
coord_flip()
satisfaction %>%
ggplot(aes(x = reorder(ï..Service,avg_member_satisfaction),
y = avg_member_satisfaction,
fill = ï..Service,
label = scales::percent(round(avg_member_satisfaction/100,3)))) +
geom_col() +
scale_fill_manual(values = c('#f5bf42',"#e0582f","#27b850","#b9cf59"),
name = "Service Provided") +
geom_text(nudge_y = -5,
color = "white",
fontface = "bold",
size = 5) +
labs(title = "Top Ranking of Services provided Based on Customer Satisfaction",
caption = "Note: The data used for this image is not actual, but generated for visual purposes") +
theme_classic() +
theme(legend.position = "none",
line = element_blank(),
axis.title = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_text(size = 12,),
plot.title = element_text(size = 15, hjust = -2)) +
coord_flip()
satisfaction %>%
ggplot(aes(x = reorder(ï..Service,avg_member_satisfaction),
y = avg_member_satisfaction,
fill = ï..Service,
label = scales::percent(round(avg_member_satisfaction/100,4)))) +
geom_col() +
scale_fill_manual(values = c('#f5bf42',"#e0582f","#27b850","#b9cf59"),
name = "Service Provided") +
geom_text(nudge_y = -5,
color = "white",
fontface = "bold",
size = 5) +
labs(title = "Top Ranking of Services provided Based on Customer Satisfaction",
caption = "Note: The data used for this image is not actual, but generated for visual purposes") +
theme_classic() +
theme(legend.position = "none",
line = element_blank(),
axis.title = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_text(size = 12,),
plot.title = element_text(size = 15, hjust = -2)) +
coord_flip()
satisfaction %>%
ggplot(aes(x = reorder(ï..Service,avg_member_satisfaction),
y = avg_member_satisfaction,
fill = ï..Service,
label = scales::percent(avg_member_satisfaction/100))) +
geom_col() +
scale_fill_manual(values = c('#f5bf42',"#e0582f","#27b850","#b9cf59"),
name = "Service Provided") +
geom_text(nudge_y = -5,
color = "white",
fontface = "bold",
size = 5) +
labs(title = "Top Ranking of Services provided Based on Customer Satisfaction",
caption = "Note: The data used for this image is not actual, but generated for visual purposes") +
theme_classic() +
theme(legend.position = "none",
line = element_blank(),
axis.title = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_text(size = 12,),
plot.title = element_text(size = 15, hjust = -2)) +
coord_flip()
satisfaction %>%
ggplot(aes(x = reorder(ï..Service,avg_member_satisfaction),
y = avg_member_satisfaction,
fill = ï..Service,
label = scales::percent(avg_member_satisfaction/100))) +
geom_col() +
scale_fill_manual(values = c('#f5bf42',"#e0582f","#27b850","#b9cf59"),
name = "Service Provided") +
geom_text(nudge_y = -5,
color = "white",
fontface = "bold",
size = 5) +
labs(title = "Top Ranking of Services provided Based on Customer Satisfaction",
caption = "Note: The data used for this image is not actual, but generated for visual purposes") +
theme_classic() +
theme(legend.position = "none",
line = element_blank(),
axis.title = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_text(size = 12,),
plot.title = element_text(size = 15, hjust = -1)) +
coord_flip()
satisfaction %>%
ggplot(aes(x = reorder(ï..Service,avg_member_satisfaction),
y = avg_member_satisfaction,
fill = ï..Service,
label = scales::percent(avg_member_satisfaction/100))) +
geom_col() +
scale_fill_manual(values = c('#f5bf42',"#e0582f","#27b850","#b9cf59"),
name = "Service Provided") +
geom_text(nudge_y = -5,
color = "white",
fontface = "bold",
size = 5) +
labs(title = "Top Ranking of Services provided Based on Customer Satisfaction",
caption = "Note: The data used for this image is not actual, but generated for visual purposes") +
theme_classic() +
theme(legend.position = "none",
line = element_blank(),
axis.title = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_text(size = 12,),
plot.title = element_text(size = 15, hjust = -1.5)) +
coord_flip()
satisfaction %>%
ggplot(aes(x = reorder(ï..Service,avg_member_satisfaction),
y = avg_member_satisfaction,
fill = ï..Service,
label = scales::percent(avg_member_satisfaction/100))) +
geom_col() +
scale_fill_manual(values = c('#f5bf42',"#e0582f","#27b850","#b9cf59"),
name = "Service Provided") +
geom_text(nudge_y = -6,
color = "white",
fontface = "bold",
size = 5) +
labs(title = "Top Ranking of Services provided Based on Customer Satisfaction",
caption = "Note: The data used for this image is not actual, but generated for visual purposes") +
theme_classic() +
theme(legend.position = "none",
line = element_blank(),
axis.title = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_text(size = 12,),
plot.title = element_text(size = 15, hjust = -1.5)) +
coord_flip()
setwd("C:/Users/saheb/Projects/BC_Homeless_Counts")
library(tidyverse)
library(here)
prj_dir <- here()
# names of data tables pertaining to all communities
names_ls1 <- paste0("table2.",1:23)
# names of data tables gathered across communities
names_ls2 <- paste0("table3.",1:9)
# combine the two lists of names into a single list
table_names <- append(names_ls1,names_ls2)
# read in from csv files and store raw data into data frames
for (i in table_names){
filename <- paste0(prj_dir,"/data/raw_data/",i,".csv")
assign(i,read_csv(filename))
}
View(table2.1)
is.data.frame(table2.1)
table2.2_c <- table2.2[-c(1,2),-2] %>%
rename( "Gender_identity" = "X",
"Total_sheltered" = "X.2",
"Percent_sheltered" = "Sheltered",
"Total_unsheltered" = "X.3",
"Percent_unsheltered" = "Unsheltered",
"Total_respondents" = "X.4",
"Percent_respondents" = "Total",
"year_2018" = "X2018") %>%
mutate_at(.vars = vars(starts_with("Percent")),
.funs = list(~ as.numeric(gsub("%", "", .)))) %>%
mutate_at(.vars = vars(starts_with("Total")),
.funs = list(~ as.numeric(gsub(",","",.))))
table2.2_c[,"year_2018"] <- as.numeric(gsub("%","",table2.2_c[,"year_2018"]))
View(table2.2_c)
# clean table2.2 - Gender
table2.2_c <- table2.2[-c(1,2),-2] %>%
rename( "Gender_identity" = "X",
"Total_sheltered" = "X.2",
"Percent_sheltered" = "Sheltered",
"Total_unsheltered" = "X.3",
"Percent_unsheltered" = "Unsheltered",
"Total_respondents" = "X.4",
"Percent_respondents" = "Total",
"year_2018" = "X2018") %>%
mutate_at(.vars = vars(starts_with("Percent")),
.funs = list(~ as.numeric(gsub("%", "", .)))) %>%
mutate_at(.vars = vars(starts_with("Total")),
.funs = list(~ as.numeric(gsub(",","",.))))
table2.2_c[,"year_2018"] <- as.numeric(gsub("%","",table2.2_c[,"year_2018"]))
# clean table2.4 - Age
table2.4_c <- table2.4[-c(1,2),] %>%
rename("Age_groups" = "X",
"Total_sheltered" = "X.1",
"Percent_sheltered" = "Sheltered",
"Total_unsheltered" = "X.2",
"Percent_unsheltered" = "Unsheltered",
"Total_respondents" = "X.3",
"Percent_respondents" = "Total",
"year_2018" = "X2018") %>%
mutate_at(.vars = vars(starts_with("Percent")),
.funs = list(~ as.numeric(gsub("%", "", .)))) %>%
mutate_at(.vars = vars(starts_with("Total")),
.funs = list(~ as.numeric(gsub(",","",.))))
View(table2.4_c)
table2.4_c[,"year_2018"] <- as.numeric(gsub("%","",table2.4_c[,"year_2018"]))
# clean table2.6 - Racial identity
table2.6_c <- table2.6[-c(1,8,11),] %>%
rename( "Applicable_reason(s)" = "Racial.Identity..more.than",
"Total_sheltered" = "X",
"Percent_sheltered" = "Sheltered",
"Total_unsheltered" = "X.1",
"Percent_unsheltered" = "Unsheltered",
"Total_respondents"= "X.2",
"Percent_respondents"= "Total") %>%
mutate_at(.vars = vars(starts_with("Percent")),
.funs = list(~ as.numeric(gsub("%", "", .)))) %>%
mutate_at(.vars = vars(starts_with("Total")),
.funs = list(~ as.numeric(gsub(",","",.))))
table2.6_c[7,1] <- "Black - Caribbean and Latin America"
table2.6_c[9,1] <- "Black - Canadian/American"
View(table2.6_c)
# clean table2.6 - Racial identity
table2.6_c <- table2.6[-c(1,8,11),] %>%
rename( "Housing_loss_reason(s)" = "Racial.Identity..more.than",
"Total_sheltered" = "X",
"Percent_sheltered" = "Sheltered",
"Total_unsheltered" = "X.1",
"Percent_unsheltered" = "Unsheltered",
"Total_respondents"= "X.2",
"Percent_respondents"= "Total") %>%
mutate_at(.vars = vars(starts_with("Percent")),
.funs = list(~ as.numeric(gsub("%", "", .)))) %>%
mutate_at(.vars = vars(starts_with("Total")),
.funs = list(~ as.numeric(gsub(",","",.))))
table2.6_c[7,1] <- "Black - Caribbean and Latin America"
table2.6_c[9,1] <- "Black - Canadian/American"
View(table2.6_c)
# clean table2.6 - Racial identity
table2.6_c <- table2.6[-c(1,8,11),] %>%
rename( "Racial_identity" = "Racial.Identity..more.than",
"Total_sheltered" = "X",
"Percent_sheltered" = "Sheltered",
"Total_unsheltered" = "X.1",
"Percent_unsheltered" = "Unsheltered",
"Total_respondents"= "X.2",
"Percent_respondents"= "Total") %>%
mutate_at(.vars = vars(starts_with("Percent")),
.funs = list(~ as.numeric(gsub("%", "", .)))) %>%
mutate_at(.vars = vars(starts_with("Total")),
.funs = list(~ as.numeric(gsub(",","",.))))
table2.6_c[7,1] <- "Black - Caribbean and Latin America"
table2.6_c[9,1] <- "Black - Canadian/American"
# clean table2.10 - Reasons for Loss of Housing
table2.10_c <- table2.10[-c(1,7,14,17),] %>%
rename( "Housing_loss_reason(s)" = "Loss.of.Housing...more.than.1",
"Total_sheltered" = "X",
"Percent_sheltered" = "Sheltered",
"Total_unsheltered" = "X.1",
"Percent_unsheltered" = "Unsheltered",
"Total_respondents"= "X.2",
"Percent_respondents"= "Total") %>%
mutate_at(.vars = vars(starts_with("Percent")),
.funs = list(~ as.numeric(gsub("%", "", .)))) %>%
mutate_at(.vars = vars(starts_with("Total")),
.funs = list(~ as.numeric(gsub(",","",.))))
# Modify values of some columns
table2.10_c[6,1] <- "Complaint (e.g. pets/noise/damage)"
table2.10_c[12,1] <- "Experienced abuse by parent/guardian"
table2.10_c[14,1] <- "Death or Departure of family member"
table2.10_c[12, c("Total_respondents", "Percent_respondents")] <- c(84,2)
View(table2.10_c)
# clean table 2.11 - Health Conditions
table2.11_c <- table2.11[-c(1,6),] %>%
rename("Health_condition(s)" = "Health.Conditions..more",
"Total_sheltered" = "X",
"Percent_sheltered" = "Sheltered",
"Total_unsheltered" = "X.1",
"Percent_unsheltered" = "Unsheltered",
"Total_respondents" = "X.2",
"Percent_respondents" = "Total",
"year_2018" = "X2018") %>%
mutate_at(.vars = vars(starts_with("Percent")),
.funs = list(~ as.numeric(gsub("%", "", .)))) %>%
mutate_at(.vars = vars(starts_with("Total")),
.funs = list(~ as.numeric(gsub(",","",.))))
table2.11_c[5,1] <- "Learning disability or cognitive impairment"
table2.11_c[,"year_2018"] <- as.numeric(gsub("%","",table2.11_c[,"year_2018"]))
View(table2.11_c)
# clean table 2.11 - Health Conditions
table2.11_c <- table2.11[-c(1,6),] %>%
rename("Health_condition(s)" = "Health.Conditions..more",
"Total_sheltered" = "X",
"Percent_sheltered" = "Sheltered",
"Total_unsheltered" = "X.1",
"Percent_unsheltered" = "Unsheltered",
"Total_respondents" = "X.2",
"Percent_respondents" = "Total",
"year_2018" = "X2018") %>%
mutate_at(.vars = vars(starts_with("Percent")),
.funs = list(~ as.numeric(gsub("%", "", .)))) %>%
mutate_at(.vars = vars(starts_with("Total")),
.funs = list(~ as.numeric(gsub(",","",.)))) %>%
mutate_at(.vars = vars(contains("2018")),
.funs = list(~ as.numeric(gsub("%","",.))))
table2.11_c[5,1] <- "Learning disability or cognitive impairment"
# clean table2.4 - Age
table2.4_c <- table2.4[-c(1,2),] %>%
rename("Age_groups" = "X",
"Total_sheltered" = "X.1",
"Percent_sheltered" = "Sheltered",
"Total_unsheltered" = "X.2",
"Percent_unsheltered" = "Unsheltered",
"Total_respondents" = "X.3",
"Percent_respondents" = "Total",
"year_2018" = "X2018") %>%
mutate_at(.vars = vars(starts_with("Percent")),
.funs = list(~ as.numeric(gsub("%", "", .)))) %>%
mutate_at(.vars = vars(starts_with("Total")),
.funs = list(~ as.numeric(gsub(",","",.)))) %>%
mutate_at(.vars = vars(contains("2018")),
.funs = list(~ as.numeric(gsub("%","",.))))
# clean table2.2 - Gender
table2.2_c <- table2.2[-c(1,2),-2] %>%
rename( "Gender_identity" = "X",
"Total_sheltered" = "X.2",
"Percent_sheltered" = "Sheltered",
"Total_unsheltered" = "X.3",
"Percent_unsheltered" = "Unsheltered",
"Total_respondents" = "X.4",
"Percent_respondents" = "Total",
"year_2018" = "X2018") %>%
mutate_at(.vars = vars(starts_with("Percent")),
.funs = list(~ as.numeric(gsub("%", "", .)))) %>%
mutate_at(.vars = vars(starts_with("Total")),
.funs = list(~ as.numeric(gsub(",","",.)))) %>%
mutate_at(.vars = vars(contains("2018")),
.funs = list(~ as.numeric(gsub("%","",.))))
#-------------------
## Save cleaned data frames as csv in clean_data folder
clean_table_names <- c("table2.2_c","table2.4_c","table2.6_c","table2.10_c","table2.11_c")
for (t in clean_table_names){
df <- get(t)
filename <- paste0("data/clean_data/",t,".csv")
write_csv(df, filename)
}
View(table2.15)
library(tidyverse)
library(here)
library(shiny)
install.packages('shinythemes')
library(shinythemes)
