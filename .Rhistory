# get path of current working directory
prj_dir <- here()
# names of data tables pertaining to all communities
names_ls1 <- paste0("table2.",1:23)
# names of data tables gathered across communities
names_ls2 <- paste0("table3.",1:9)
# combine the two lists of names into a single list
table_names <- append(names_ls1,names_ls2)
# read in from csv files and store raw data into data frames
for (i in table_names){
filename <- paste0(prj_dir,"/data/raw_data/",i,".csv")
assign(i,read_csv(filename))
}
table3.1_c <- table3.1[-c(1,2,28,29),-7] %>%
rename("BC_community" = "X",
"Total_Sheltered" = "X.1",
"Percent_Sheltered" = "Sheltered",
"Total_Unsheltered" = "X.2",
"Percent_Unsheltered" = "Unsheltered",
"Total_Respondents_2021" = "X.3",
"Total_Respondents_2018" = "X.4",
"Percent_change" = "X2018") %>%
mutate_at(.vars = vars(starts_with("Total")),
.funs = list(~ as.numeric(gsub(",","",.)))) %>%
mutate_at(.vars = vars(starts_with("Percent")),
.funs = list(~ as.numeric(gsub("%","",.)))) %>%
mutate(address = paste(gsub("/.+","",BC_community),
"British Columbia",
"Canada",
sep = ", "))
# data frame of the addresses
addresses <- table3.1_c$address
my_key = "aGkfDLd1qnbahZI1IGVuNu3QZi9McBIK"
# get coordinates of the different Canadian cities
geocodes <- geocode_mapquest(addresses = addresses,
key = my_key) %>%
as.data.frame()
# join geocodes to table_3.1c
table3.1_c <- left_join(table3.1_c, geocodes, by = "address")
View(table3.1_c)
clean_table_names <- c("table1_c","table2.2_c","table2.4_c","table2.6_c",
"table2.10_c","table2.11_c","table2.12_c","table2.15_c",
"table2.17_c","table2.18_c","table3.1_c")
for (t in clean_table_names){
filename <- paste0("data/clean_data/",t,".csv")
if (!file.exists(filename)){
df <- get(t)
write_csv(df, filename)
}
}
View(table3.9)
# clean table3.9 - length of time in community
table3.9_c <- table3.9[-c(1:11,37,38),]
View(table3.9_c)
# clean table3.9 - length of time in community
table3.9_c <- table3.9[-c(1:11,37,38),] %>%
separate(X.2,
into = c("Total_1to5","Percent_1to5"))
# clean table3.9 - length of time in community
table3.9_c <- table3.9[-c(1:11,37,38),] %>%
separate(X.2,
into = c("Total_1to5","Percent_1to5", convert = TRUE))
# clean table3.9 - length of time in community
table3.9_c <- table3.9[-c(1:11,37,38),] %>%
separate(X.2,
into = c("Total_1to5","Percent_1to5"))
# clean table3.9 - length of time in community
table3.9_c <- table3.9[-c(1:11,37,38),] %>%
separate(X.2,
into = c("Total_1to5","Percent_1to5")) %>%
separate(X.3,
into = c("Total_5to10","Percent_5to10")) %>%
separate(X.4,
into = c("Total_10plus","Percent_10plus")) %>%
separate(X.5,
into = c("Total_always","Percent_always")) %>%
separate(X.6,
into = c("Total_Respondents","Percent_Respondents"))
# clean table3.9 - length of time in community
table3.9_c <- table3.9[-c(1:11,37,38),] %>%
separate(X.2,
into = c("Total_1to5","Percent_1to5")) %>%
separate(X.3,
into = c("Total_5to10","Percent_5to10")) %>%
separate(X.4,
into = c("Total_10plus","Percent_10plus")) %>%
separate(X.5,
into = c("Total_always","Percent_always")) %>%
separate(X.6,
into = c("Total_Respondents","Percent_Respondents")) %>%
rename("Total_under1" = "X.1",
"Percent_under1" = "Under.1")
# clean table3.9 - length of time in community
table3.9_c <- table3.9[-c(1:11,37,38),] %>%
separate(X.2,
into = c("Total_1to5","Percent_1to5")) %>%
separate(X.3,
into = c("Total_5to10","Percent_5to10")) %>%
separate(X.4,
into = c("Total_10plus","Percent_10plus")) %>%
separate(X.5,
into = c("Total_always","Percent_always")) %>%
separate(X.6,
into = c("Total_Respondents","Percent_Respondents")) %>%
rename("Total_under1" = "X.1",
"Percent_under1" = "Under.1") %>%
mutate_at(.vars = vars(starts_with("Total")),
.funs = list(~ as.numeric(gsub(",","",.)))) %>%
mutate_at(.vars = vars(starts_with("Percent")),
.funs = list(~ as.numeric(gsub("%","",.))))
# clean table3.9 - length of time in community
table3.9_c <- table3.9[-c(1:11,37,38),] %>%
separate(X.2,
into = c("Total_1to5","Percent_1to5")) %>%
separate(X.3,
into = c("Total_5to10","Percent_5to10")) %>%
separate(X.4,
into = c("Total_10plus","Percent_10plus")) %>%
separate(X.5,
into = c("Total_always","Percent_always")) %>%
separate(X.6,
into = c("Total_Respondents","Percent_Respondents")) %>%
rename("Total_under1" = "X.1",
"Percent_under1" = "Under.1",
"Do_not_know" = "X.7",
"Total_Homeless_identified" = "X.8") %>%
mutate_at(.vars = vars(starts_with("Total")),
.funs = list(~ as.numeric(gsub(",","",.)))) %>%
mutate_at(.vars = vars(starts_with("Percent")),
.funs = list(~ as.numeric(gsub("%","",.))))
# clean table3.9 - length of time in community
table3.9_c <- table3.9[-c(1:11,37,38),] %>%
separate(X.2,
into = c("Total_1to5","Percent_1to5")) %>%
separate(X.3,
into = c("Total_5to10","Percent_5to10")) %>%
separate(X.4,
into = c("Total_10plus","Percent_10plus")) %>%
separate(X.5,
into = c("Total_always","Percent_always")) %>%
separate(X.6,
into = c("Total_Respondents","Percent_Respondents")) %>%
rename("Total_under1" = "X.1",
"Percent_under1" = "Under.1",
"Do_not_know" = "X.7",
"Total_Homeless_identified" = "X.8") %>%
mutate_at(.vars = vars(starts_with("Total")),
.funs = list(~ as.numeric(gsub(",","",.)))) %>%
mutate_at(.vars = vars(starts_with("Percent")),
.funs = list(~ as.numeric(gsub("%","",.)))) %>%
select(- Percent_Respondents)
# clean table3.9 - length of time in community
table3.9_c <- table3.9[-c(1:11,37,38),] %>%
separate(X.2,
into = c("Total_1to5","Percent_1to5")) %>%
separate(X.3,
into = c("Total_5to10","Percent_5to10")) %>%
separate(X.4,
into = c("Total_10plus","Percent_10plus")) %>%
separate(X.5,
into = c("Total_always","Percent_always")) %>%
separate(X.6,
into = c("Total_Respondents","Percent_Respondents")) %>%
rename("Total_under1" = "X.1",
"Percent_under1" = "Under.1",
"Do_not_know" = "X.7",
"Total_Homeless_Identified" = "X.8") %>%
mutate_at(.vars = vars(starts_with("Total")),
.funs = list(~ as.numeric(gsub(",","",.)))) %>%
mutate_at(.vars = vars(starts_with("Percent")),
.funs = list(~ as.numeric(gsub("%","",.)))) %>%
select(- Percent_Respondents)
# clean table3.9 - length of time in community
table3.9_c <- table3.9[-c(1:11,37,38),] %>%
separate(X.2,
into = c("Total_1to5","Percent_1to5")) %>%
separate(X.3,
into = c("Total_5to10","Percent_5to10")) %>%
separate(X.4,
into = c("Total_10plus","Percent_10plus")) %>%
separate(X.5,
into = c("Total_Always","Percent_Always")) %>%
separate(X.6,
into = c("Total_Respondents","Percent_Respondents")) %>%
rename("BC_community" = "X",
"Total_under1" = "X.1",
"Percent_under1" = "Under.1",
"Do_not_know" = "X.7",
"Total_Homeless_Identified" = "X.8") %>%
mutate_at(.vars = vars(starts_with("Total")),
.funs = list(~ as.numeric(gsub(",","",.)))) %>%
mutate_at(.vars = vars(starts_with("Percent")),
.funs = list(~ as.numeric(gsub("%","",.)))) %>%
select(- Percent_Respondents)
# clean table3.9 - length of time in community
table3.9_c <- table3.9[-c(1:11,37,38),] %>%
separate(X.2,
into = c("Total_1to5","Percent_1to5")) %>%
separate(X.3,
into = c("Total_5to10","Percent_5to10")) %>%
separate(X.4,
into = c("Total_10plus","Percent_10plus")) %>%
separate(X.5,
into = c("Total_Always","Percent_Always")) %>%
separate(X.6,
into = c("Total_Respondents","Percent_Respondents")) %>%
rename("BC_community" = "X",
"Total_Under1" = "X.1",
"Percent_Under1" = "Under.1",
"Do_Not_Know" = "X.7",
"Total_Homeless_Identified" = "X.8") %>%
mutate_at(.vars = vars(starts_with("Total")),
.funs = list(~ as.numeric(gsub(",","",.)))) %>%
mutate_at(.vars = vars(starts_with("Percent")),
.funs = list(~ as.numeric(gsub("%","",.)))) %>%
select(- Percent_Respondents)
#-------------------
## Save cleaned data frames as csv in clean_data folder
clean_table_names <- c("table1_c","table2.2_c","table2.4_c","table2.6_c",
"table2.10_c","table2.11_c","table2.12_c","table2.15_c",
"table2.17_c","table2.18_c","table3.1_c", "table3.9_c")
for (t in clean_table_names){
filename <- paste0("data/clean_data/",t,".csv")
if (!file.exists(filename)){
df <- get(t)
write_csv(df, filename)
}
}
library(shiny); runApp('code/03_app.R')
read_csv("data/clean_data/table1_c.csv")
runApp('code/03_app.R')
runApp('code/03_app.R')
runApp('code/03_app.R')
runApp('code/03_app.R')
library(shiny); runApp('code/03_app.R')
runApp('code/03_app.R')
runApp('03_app.R')
runApp('code/03_app.R')
runApp('code/03_app.R')
library(tidyverse)
library(leaflet)
library(here)
library(shiny)
library(shinydashboard)
runApp('BC_Homeless_Counts')
shiny::runApp('code/BC_Homeless_Counts')
runApp('code/BC_Homeless_Counts')
runApp('code/BC_Homeless_Counts')
runApp('code/BC_Homeless_Counts')
shiny::runApp('code/03_shiny_app')
runApp('code/03_shiny_app')
runApp('code/03_shiny_app')
runApp('code/03_shiny_app')
runApp('code/03_shiny_app')
runApp('code/03_shiny_app')
runApp('code/03_shiny_app')
runApp('code/03_shiny_app')
runApp('code/03_shiny_app')
runApp('code/03_shiny_app')
?addCircleMarkers
runApp('code/03_shiny_app')
runApp('code/03_shiny_app')
shiny::runApp('code/03_shiny_app')
library(htmltools)
runApp('code/03_shiny_app')
runApp('code/03_shiny_app')
runApp('code/03_shiny_app')
runApp('code/03_shiny_app')
shiny::runApp('code/03_shiny_app')
shiny::runApp('code/03_shiny_app')
shiny::runApp('code/03_shiny_app')
runApp('code/03_shiny_app')
runApp('code/03_shiny_app')
shiny::runApp('code/03_shiny_app')
runApp('code/03_shiny_app')
runApp('code/03_shiny_app')
runApp('code/03_shiny_app')
runApp('code/03_shiny_app')
shiny::runApp('code/03_shiny_app')
runApp('code/03_shiny_app')
runApp('code/03_shiny_app')
shiny::runApp('code/03_shiny_app')
runApp()
runApp()
shiny::runApp('code/03_shiny_app')
runApp('code/03_shiny_app')
library(tidyverse)
library(here)
# get path of current working directory
prj_dir <- here()
# names of data tables pertaining to all communities
names_ls1 <- paste0("table2.",1:23)
# names of data tables gathered across communities
names_ls2 <- paste0("table3.",1:9)
# combine the two lists of names into a single list
table_names <- append(names_ls1,names_ls2)
# read in from csv files and store raw data into data frames
for (i in table_names){
filename <- paste0(prj_dir,"/data/raw_data/",i,".csv")
assign(i,read_csv(filename))
}
View(table2.16)
colnames(table2.16)
304/1921
1579/3946
table2.16_c <- table2.16[-c(1,15,16,17),] %>%
rename("Services_Accessed" = "Services.Accessed..more.than.1",
"Total_Sheltered" = "X",
"Percent_Sheltered" = "Sheltered",
"Total_Unsheltered" = "Unsheltered",
"Percent_Unsheltered" = "X.1",
"Total_Respondents" = "X.2",
"Percent_Respondents" = "Total") %>%
mutate_at(.vars = vars(starts_with("Total")),
.funs = list(~ as.numeric(gsub(",","",.)))) %>%
mutate_at(.vars = vars(starts_with("Percent")),
.funs = list(~ as.numeric(gsub("%","",.))))
View(table2.16_c)
#-------------------
## Save cleaned data frames as csv in clean_data folder
clean_table_names <- c("table1_c","table2.2_c","table2.4_c","table2.6_c",
"table2.10_c","table2.11_c","table2.12_c","table2.15_c",
"table2.17_c","table2.18_c","table3.1_c","table3.9_c",
"table2.16_c")
for (t in clean_table_names){
filename <- paste0("data/clean_data/",t,".csv")
if (!file.exists(filename)){
df <- get(t)
write_csv(df, filename)
}
}
shiny::runApp('code/03_shiny_app')
runApp('code/03_shiny_app')
shiny::runApp('code/03_shiny_app')
shiny::runApp('code/03_shiny_app')
library(tidyverse)
library(leaflet)
library(htmltools)
library(here)
library(shiny)
library(shinydashboard)
# load all csv files from clean_data folder into a list of data frames
my_files <- list.files(path = paste0(here(),"/data/clean_data"))
my_files
?lapply
?list.files
# load all csv files from clean_data folder into a list of data frames
my_files <- list.files(path = paste0(here(),"/data/clean_data"),
full.names = TRUE)
my_files
my_data <- lapply(my_files,read.csv)
View(my_data)
my_data[[1]]
View(my_data)
my_data[[1]]
my_files
runApp('code/03_shiny_app')
shiny::runApp('code/03_shiny_app')
runApp('code/03_shiny_app')
runApp('code/03_shiny_app')
runApp('code/03_shiny_app')
runApp('code/03_shiny_app')
runApp('code/03_shiny_app')
library(tidyverse)
library(leaflet)
library(htmltools)
library(here)
library(shiny)
library(shinydashboard)
# Load all csv files from clean_data folder into a list of data frames
my_files <- list.files(path = paste0(here(),"/data/clean_data"),
full.names = TRUE)
my_data <- lapply(my_files,read.csv)
# function to prepare data frame for further manipulation and plotting
prep_data <- function(df,df_subject_variable){
df %>%
# select percentage variables and variable of current subject
select(any_of(df_subject_variable, contains("Percent"),contains("2018"))) %>%
# pivot percentage columns as values of a single variable
pivot_longer(cols = any_of(contains("Percent"),contains("2018")),
names_to = "type",
values_to = "Percentage") %>%
# modify the values of type column
mutate_at(.vars = vars("type"),
.funs = list(~ str_to_title(gsub(".*_","",.))))
}
df <- prep_data(my_data[[9]])
df <- prep_data(my_data[[9]],"Gender_identity")
library(tidyverse)
library(leaflet)
library(htmltools)
library(here)
library(shiny)
library(shinydashboard)
# Load all csv files from clean_data folder into a list of data frames
my_files <- list.files(path = paste0(here(),"/data/clean_data"),
full.names = TRUE)
my_data <- lapply(my_files,read.csv)
# function to prepare data frame for further manipulation and plotting
prep_data <- function(df,df_subject_variable){
df %>%
# select percentage variables and variable of current subject
select(any_of(df_subject_variable, contains("Percent"),contains("2018"))) %>%
# pivot percentage columns as values of a single variable
pivot_longer(cols = any_of(contains("Percent"),contains("2018")),
names_to = "type",
values_to = "Percentage") %>%
# modify the values of type column
mutate_at(.vars = vars("type"),
.funs = list(~ str_to_title(gsub(".*_","",.))))
}
library(tidyverse)
library(leaflet)
library(htmltools)
library(here)
library(shiny)
library(shinydashboard)
# Load all csv files from clean_data folder into a list of data frames
my_files <- list.files(path = paste0(here(),"/data/clean_data"),
full.names = TRUE)
my_data <- lapply(my_files,read.csv)
# function to prepare data frame for further manipulation and plotting
prep_data <- function(df,df_subject_variable){
df %>%
# select percentage variables and variable of current subject
select(any_of(df_subject_variable, contains("Percent"),contains("2018"))) %>%
# pivot percentage columns as values of a single variable
pivot_longer(cols = any_of(contains("Percent"),contains("2018")),
names_to = "type",
values_to = "Percentage") %>%
# modify the values of type column
mutate_at(.vars = vars("type"),
.funs = list(~ str_to_title(gsub(".*_","",.))))
}
prep_data(my_data[[9]],"Gender_identity")
# function to prepare data frame for further manipulation and plotting
prep_data <- function(df){
df %>%
# select percentage variables and variable of current subject
select(any_of(contains("Percent"),contains("2018"))) %>%
# pivot percentage columns as values of a single variable
pivot_longer(cols = any_of(contains("Percent"),contains("2018")),
names_to = "type",
values_to = "Percentage") %>%
# modify the values of type column
mutate_at(.vars = vars("type"),
.funs = list(~ str_to_title(gsub(".*_","",.))))
}
prep_data(my_data[[9]])
# function to prepare data frame for further manipulation and plotting
prep_data <- function(df){
df <- as.data.frame(df)
df %>%
# select percentage variables and variable of current subject
select(any_of(contains("Percent"),contains("2018"))) %>%
# pivot percentage columns as values of a single variable
pivot_longer(cols = any_of(contains("Percent"),contains("2018")),
names_to = "type",
values_to = "Percentage") %>%
# modify the values of type column
mutate_at(.vars = vars("type"),
.funs = list(~ str_to_title(gsub(".*_","",.))))
}
prep_data(my_data[[9]])
# function to prepare data frame for further manipulation and plotting
prep_data <- function(){
# select percentage variables and variable of current subject
select(any_of(contains("Percent"),contains("2018"))) %>%
# pivot percentage columns as values of a single variable
pivot_longer(cols = any_of(contains("Percent"),contains("2018")),
names_to = "type",
values_to = "Percentage") %>%
# modify the values of type column
mutate_at(.vars = vars("type"),
.funs = list(~ str_to_title(gsub(".*_","",.))))
}
my_data[[9]] %>%
prep_data()
# This file contains all the global objects used by the UI and Server
# Load all required libraries
library(tidyverse)
library(leaflet)
library(htmltools)
library(here)
library(shiny)
library(shinydashboard)
# Load all csv files from clean_data folder into a list of data frames
my_files <- list.files(path = paste0(here(),"/data/clean_data"),
full.names = TRUE)
my_data <- lapply(my_files,read.csv)
#
prep_data <- function(df, subject_var){
subject_var <- enquo(subject_var)
df %>%
select(any_of(subject_var,contains("Percent"), contains("2018")))
}
prep_data(my_data[[9]])
prep_data(my_data[[9]],"Gender_identity")
#
prep_data <- function(df, subject_var){
subject_var <- enquo(subject_var)
df %>%
select(any_of(!! subject_var,contains("Percent"), contains("2018")))
}
prep_data(my_data[[9]],"Gender_identity")
#
prep_data <- function(df, subject_var){
subject_var <- enquo(subject_var)
df %>%
select(any_of(!! subject_var,contains("Percent"), contains("2018")))
}
prep_data(my_data[[9]],"Gender_identity")
