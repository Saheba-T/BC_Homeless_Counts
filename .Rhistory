.funs = list(~ str_to_title(gsub(".*_","",.)))
)
}
prep_data(my_data[[9]], "Gender_identity")
# Function to prepare data for visualization
prep_data <- function(df, subject_var){
df %>%
select(any_of(c(subject_var, contains("Percent"), contains("2018")))) %>%
pivot_longer(cols = vars(contains("Percent")),
names_to = "type",
values_to = "percentage") %>%
mutate_at(.vars = vars("type"),
.funs = list(~ str_to_title(gsub(".*_","",.)))
)
}
prep_data(my_data[[9]], "Gender_identity")
# Function to prepare data for visualization
prep_data <- function(df, subject_var){
df %>%
select(any_of(c(subject_var, contains("Percent"), contains("2018")))) %>%
pivot_longer(cols = !subject_var,
names_to = "type",
values_to = "percentage") %>%
mutate_at(.vars = vars("type"),
.funs = list(~ str_to_title(gsub(".*_","",.)))
)
}
prep_data(my_data[[9]], "Gender_identity")
# Function to prepare data for visualization
prep_data <- function(df, subject_var){
df %>%
select(any_of(c(subject_var, contains("Percent"), contains("2018")))) %>%
pivot_longer(cols = !subject_var,
names_to = "type",
values_to = "percentage")
}
prep_data(my_data[[9]], "Gender_identity")
# Function to prepare data for visualization
prep_data <- function(df, subject_var){
df %>%
select(any_of(c(subject_var, contains("Percent"), contains("2018")))) %>%
pivot_longer(cols = -all_of(subject_var),
names_to = "type",
values_to = "percentage")
}
prep_data(my_data[[9]], "Gender_identity")
# Function to prepare data for visualization
prep_data <- function(df, subject_var){
df %>%
select(any_of(c(subject_var, contains("Percent"), contains("2018")))) %>%
pivot_longer(-all_of(subject_var),
names_to = "type",
values_to = "percentage")
}
prep_data(my_data[[9]], "Gender_identity")
# Function to prepare data for visualization
prep_data <- function(df, subject_var){
df %>%
select(any_of(c(subject_var, contains("Percent"), contains("2018"))))
}
prep_data(my_data[[9]], "Gender_identity")
# Function to prepare data for visualization
prep_data <- function(df, subject_var){
df %>%
select(all_of(c(subject_var,contains("Percent"))),
any_of(contains("2018"))
)
}
prep_data(my_data[[9]], "Gender_identity")
# Function to prepare data for visualization
prep_data <- function(df, subject_var){
df %>%
select(subject_var,contains("Percent"))
}
prep_data(my_data[[9]], "Gender_identity")
?select_if
# Function to prepare data for visualization
prep_data <- function(df, subject_var){
df %>%
select(subject_var,contains("Percent") | contains("2018"))
}
prep_data(my_data[[9]], "Gender_identity")
# Function to prepare data for visualization
prep_data <- function(df, subject_var){
df %>%
select(subject_var |contains("Percent") | contains("2018"))
}
prep_data(my_data[[9]], "Gender_identity")
# Function to prepare data for visualization
prep_data <- function(df, subject_var){
df %>%
select(subject_var, contains("Percent") | contains("2018"))
}
prep_data(my_data[[9]], "Gender_identity")
# Function to prepare data for visualization
prep_data <- function(df, subject_var){
df %>%
select(subject_var, contains("Percent") | contains("2018")) %>%
pivot_longer(cols = - subject_var,
names_to = "type",
values_to = "percentage")
}
prep_data(my_data[[9]], "Gender_identity")
# Function to prepare data for visualization
prep_data <- function(df, subject_var){
df %>%
select(subject_var, contains("Percent") | contains("2018")) %>%
pivot_longer(cols = - subject_var,
names_to = "Type",
values_to = "Percentage") %>%
mutate_at(.vars = vars("type"),
.funs = list(~ str_to_title(gsub(".*_","",.)))
)
}
prep_data(my_data[[9]], "Gender_identity")
# Function to prepare data for visualization
prep_data <- function(df, subject_var){
df %>%
select(subject_var, contains("Percent") | contains("2018")) %>%
pivot_longer(cols = - subject_var,
names_to = "Type",
values_to = "Percentage") %>%
mutate_at(.vars = vars("type"),
.funs = list(~ gsub(".*_","",.))
)
}
prep_data(my_data[[9]], "Gender_identity")
# Function to prepare data for visualization
prep_data <- function(df, subject_var){
df %>%
select(subject_var, contains("Percent") | contains("2018")) %>%
pivot_longer(cols = - subject_var,
names_to = "Type",
values_to = "Percentage") %>%
mutate_at(.vars = vars("Type"),
.funs = list(~ str_to_tile(gsub(".*_","",.)))
)
}
prep_data(my_data[[9]], "Gender_identity")
# Function to prepare data for visualization
prep_data <- function(df, subject_var){
df %>%
select(subject_var, contains("Percent") | contains("2018")) %>%
pivot_longer(cols = - subject_var,
names_to = "Type",
values_to = "Percentage") %>%
mutate_at(.vars = vars("Type"),
.funs = list(~ gsub(".*_","",.))
)
}
prep_data(my_data[[9]], "Gender_identity")
my_files
prep_data(my_data[[10]], "Age_groups")
runApp('code/03_shiny_app')
shiny::runApp('code/03_shiny_app')
prep_data(my_data[[9]],"Gender_identity", groups())
prep_data(my_data[[9]],"Gender_identity", c("Sheltered","Unsheltered"))
prep_data(my_data[[9]],"Gender_identity", c("Sheltered","Unsheltered")) %>%
filter(!Gender_identity %in% c("Respondents","Total","Don't Know/No Answer"))
runApp('code/03_shiny_app')
my_files
prep_data(my_data[[10]], "Age_groups", c("Sheltered","Unsheltered"))
runApp('code/03_shiny_app')
runApp('code/03_shiny_app')
runApp('code/03_shiny_app')
my_files
runApp('code/03_shiny_app')
runApp('code/03_shiny_app')
runApp('code/03_shiny_app')
shiny::runApp('code/03_shiny_app')
runApp()
runApp('code/03_shiny_app')
?fct_reorder
runApp('code/03_shiny_app')
runApp('code/03_shiny_app')
library(gridExtra)
textGrob
?textGrob
library(grid)
runApp('code/03_shiny_app')
shiny::runApp('code/03_shiny_app')
runApp()
runApp('code/03_shiny_app')
runApp('code/03_shiny_app')
runApp('code/03_shiny_app')
?element_text
runApp('code/03_shiny_app')
runApp('code/03_shiny_app')
shiny::runApp('code/03_shiny_app')
runApp('code/03_shiny_app')
shiny::runApp('code/03_shiny_app')
runApp('code/03_shiny_app')
1135/2497
runApp('code/03_shiny_app')
shiny::runApp('code/03_shiny_app')
shiny::runApp('code/03_shiny_app')
runApp('code/03_shiny_app')
shiny::runApp('code/03_shiny_app')
runApp()
runApp()
runApp('code/03_shiny_app')
runApp('code/03_shiny_app')
runApp('code/03_shiny_app')
runApp('code/03_shiny_app')
# Load all required libraries
library(tidyverse)
library(leaflet)
library(htmltools)
library(here)
library(shiny)
library(shinydashboard)
library(gridExtra)
library(grid)
?pivot_wider
runApp('code/03_shiny_app')
runApp()
shiny::runApp('code/03_shiny_app')
runApp('code/03_shiny_app')
shiny::runApp('code/03_shiny_app')
prep_data(my_data[[6]],"Services_Accessed",c("Sheltered","Unsheltered")) %>%
filter(!Services_Accessed %in% c("Respondents","Total","Don't Know/No Answer")) %>%
pivot_wider(names_from = "Type", values_from = "Percentage")
mutate(mydiff = abs(eval(parse(text = groups()[1])) -
eval(parse(text = groups()[2])))) %>%
mutate(Services_Accessed = fct_reorder(Services_Accessed, mydiff))
mutate(Services_Accessed = fct_reorder(Services_Accessed, mydiff))
mutate(mydiff = abs(Sheltered - Unsheltered)) %>%
mutate(Services_Accessed= fct_reorder(Services_Accessed, mydiff))
mutate("mydiff" = abs("Sheltered" - "Unsheltered")) %>%
mutate("Services_Accessed"= fct_reorder("Services_Accessed", "mydiff"))
runApp('code/03_shiny_app')
mutate("mydiff" = abs(eval(parse("Sheltered")) - eval(parse("Unsheltered")))) %>%
mutate("Services_Accessed"= fct_reorder("Services_Accessed", "mydiff"))
mutate("mydiff" = abs(eval(parse("Sheltered")) - eval(parse("Unsheltered")))) %>%
mutate("Services_Accessed"= fct_reorder("Services_Accessed", "mydiff"))
mutate("mydiff" = abs(eval(parse(text="Sheltered")) - eval(parse(text="Unsheltered")))) %>%
mutate("Services_Accessed"= fct_reorder("Services_Accessed", "mydiff"))
prep_data(my_data[[6]],"Services_Accessed",c("Sheltered","Unsheltered")) %>%
filter(!Services_Accessed %in% c("Respondents","Total","Don't Know/No Answer")) %>%
pivot_wider(names_from = "Type", values_from = "Percentage")
prep_data(my_data[[6]],"Services_Accessed",c("Sheltered","Unsheltered")) %>%
filter(!Services_Accessed %in% c("Respondents","Total","Don't Know/No Answer")) %>%
pivot_wider(names_from = "Type", values_from = "Percentage") %>%
mutate(mydiff = Sheltered - Unsheltered)
prep_data(my_data[[6]],"Services_Accessed",c("Sheltered","Unsheltered")) %>%
filter(!Services_Accessed %in% c("Respondents","Total","Don't Know/No Answer")) %>%
pivot_wider(names_from = "Type", values_from = "Percentage") %>%
mutate(mydiff = Sheltered - Unsheltered) %>%
mutate(mydiff = abs(mydiff))
prep_data(my_data[[6]],"Services_Accessed",c("Respondents","2018")) %>%
filter(!Services_Accessed %in% c("Respondents","Total","Don't Know/No Answer")) %>%
pivot_wider(names_from = "Type", values_from = "Percentage")
runApp('code/03_shiny_app')
runApp('code/03_shiny_app')
# Load all required libraries
library(tidyverse)
library(leaflet)
library(htmltools)
library(here)
library(shiny)
library(shinydashboard)
library(gridExtra)
library(grid)
prep_data(my_data[[5]], "Sources_of_income", groups()) %>%
filter(!Sources_of_income %in% c("Respondents","Total","Don't Know/No Answer")) %>%
mutate(Sources_of_income = as.factor(Sources_of_income))
# Function to prepare data for visualization
prep_data <- function(df, subject_var, group_vec){
df %>%
select(subject_var, contains("Percent") | contains("2018")) %>%
pivot_longer(cols = - subject_var,
names_to = "Type",
values_to = "Percentage") %>%
mutate_at(.vars = vars("Type"),
.funs = list(~ gsub(".*_","",.))
) %>%
filter(str_to_title(Type) %in% group_vec)
}
prep_data(my_data[[5]], "Sources_of_income", groups()) %>%
filter(!Sources_of_income %in% c("Respondents","Total","Don't Know/No Answer")) %>%
mutate(Sources_of_income = as.factor(Sources_of_income))
runApp('code/03_shiny_app')
prep_data(my_data[[5]], "Sources_of_income", groups()) %>%
filter(!Sources_of_income %in% c("Respondents","Total","Don't Know/No Answer")) %>%
mutate(Sources_of_income = as.factor(Sources_of_income))
shiny::runApp('code/03_shiny_app')
prep_data(my_data[[5]], "Sources_of_income", groups()) %>%
filter(!Sources_of_income %in% c("Respondents","Total","Don't Know/No Answer")) %>%
mutate(Sources_of_income = as.factor(Sources_of_income))
prep_data(my_data[[5]], "Sources_of_income", groups()) %>%
mutate(Sources_of_income = as.factor(Sources_of_income))
prep_data(my_data[[5]], "Sources_of_income", groups()) %>%
mutate(Sources_of_income = as.factor(Sources_of_income))
runApp('code/03_shiny_app')
prep_data(my_data[[5]], "Sources_of_income", groups())
prep_data(my_data[[5]], "Sources_of_income", c("Sheltered","Unsheltered"))
prep_data(my_data[[5]], "Sources_of_income", c("Sheltered","Unsheltered")) %>%
filter(!Sources_of_income %in% c("Respondents","Total","Don't Know/No Answer")) %>%
mutate(Sources_of_income = as.factor(Sources_of_income)) %>%
pivot_wider(names_from = "Type", values_from = "Percentage")
prep_data(my_data[[5]], "Sources_of_income", c("Sheltered","Unsheltered")) %>%
filter(!Sources_of_income %in% c("Respondents","Total","Don't Know/No Answer")) %>%
mutate(Sources_of_income = as.factor(Sources_of_income)) %>%
pivot_wider(names_from = "Type", values_from = "Percentage") %>%
mutate(mydiff = Sheltered - Unsheltered)
# Function to prepare data for visualization
prep_data <- function(df, subject_var, group_vec){
df %>%
select(subject_var, contains("Percent") | contains("2018")) %>%
pivot_longer(cols = - subject_var,
names_to = "Type",
values_to = "Percentage") %>%
mutate_at(.vars = vars("Type"),
.funs = list(~ str_to_title(gsub(".*_","",.)))
) %>%
filter(str_to_title(Type) %in% group_vec)
}
prep_data(my_data[[5]], "Sources_of_income", c("Sheltered","Unsheltered")) %>%
filter(!Sources_of_income %in% c("Respondents","Total","Don't Know/No Answer")) %>%
mutate(Sources_of_income = as.factor(Sources_of_income)) %>%
pivot_wider(names_from = "Type", values_from = "Percentage") %>%
mutate(mydiff = Sheltered - Unsheltered)
df %>%
select(subject_var, contains("Percent") | contains("2018")) %>%
pivot_longer(cols = - subject_var,
names_to = "Type",
values_to = "Percentage") %>%
mutate_at(.vars = vars("Type"),
.funs = list(~ str_to_title(gsub(".*_","",.)))
) %>%
filter(Type %in% group_vec)
prep_data(my_data[[5]], "Sources_of_income", c("Sheltered","Unsheltered")) %>%
filter(!Sources_of_income %in% c("Respondents","Total","Don't Know/No Answer")) %>%
mutate(Sources_of_income = as.factor(Sources_of_income)) %>%
pivot_wider(names_from = "Type", values_from = "Percentage") %>%
mutate(mydiff = Sheltered - Unsheltered)
runApp('code/03_shiny_app')
shiny::runApp('code/03_shiny_app')
prep_data(my_data[[5]], "Sources_of_income", c("Respondents","2018")) %>%
filter(!Sources_of_income %in% c("Respondents","Total","Don't Know/No Answer")) %>%
mutate(Sources_of_income = as.factor(Sources_of_income)) %>%
pivot_wider(names_from = "Type", values_from = "Percentage")
prep_data(my_data[[5]], "Sources_of_income", c("Respondents","2018")) %>%
filter(!Sources_of_income %in% c("Respondents","Total","Don't Know/No Answer")) %>%
mutate(Sources_of_income = as.factor(Sources_of_income)) %>%
pivot_wider(names_from = "Type", values_from = "Percentage")%>%
mutate(mydiff = Respondents - 2018)
prep_data(my_data[[5]], "Sources_of_income", c("Respondents","2018")) %>%
filter(!Sources_of_income %in% c("Respondents","Total","Don't Know/No Answer")) %>%
mutate(Sources_of_income = as.factor(Sources_of_income)) %>%
pivot_wider(names_from = "Type", values_from = "Percentage")%>%
mutate(mydiff = Respondents - "2018")
eval(2018)
prep_data(my_data[[5]], "Sources_of_income", c("Respondents","2018")) %>%
filter(!Sources_of_income %in% c("Respondents","Total","Don't Know/No Answer")) %>%
mutate(Sources_of_income = as.factor(Sources_of_income)) %>%
pivot_wider(names_from = "Type", values_from = "Percentage")%>%
rename("Year.2018" = "2018") %>%
mutate(mydiff = Respondents - Year.2018)
prep_data(my_data[[5]], "Sources_of_income", c("Respondents","2018")) %>%
filter(!Sources_of_income %in% c("Respondents","Total","Don't Know/No Answer")) %>%
mutate(Sources_of_income = as.factor(Sources_of_income)) %>%
pivot_wider(names_from = "Type", values_from = "Percentage")%>%
rename("Year.2018" = "2018") %>%
mutate(mydiff = Respondents - Year.2018) %>%
mutate(Sources_of_income = fct_reorder(Sources_of_income, abs(mydiff)))
? rename_with
?rename
# Function to prepare data for visualization
prep_data <- function(df, subject_var, group_vec){
df %>%
select(subject_var, contains("Percent") | contains("2018")) %>%
rename_with(paste("Year",gsub(".*_","",.),sep = "."), contains("2018")) %>%
pivot_longer(cols = - subject_var,
names_to = "Type",
values_to = "Percentage") %>%
mutate_at(.vars = vars("Type"),
.funs = list(~ str_to_title(gsub(".*_","",.)))
) %>%
filter(Type %in% group_vec)
}
prep_data(my_data[[5]], "Sources_of_income", c("Respondents","Year.2018")) %>%
filter(!Sources_of_income %in% c("Respondents","Total","Don't Know/No Answer")) %>%
mutate(Sources_of_income = as.factor(Sources_of_income)) %>%
pivot_wider(names_from = "Type", values_from = "Percentage")%>%
mutate(mydiff = Respondents - Year.2018) %>%
mutate(Sources_of_income = fct_reorder(Sources_of_income, abs(mydiff)))
# Function to prepare data for visualization
prep_data <- function(df, subject_var, group_vec){
df %>%
select(subject_var, contains("Percent") | contains("2018")) %>%
rename_with(paste("Year",gsub(".*_","",.x, fixed = TRUE),sep = "."), contains("2018")) %>%
pivot_longer(cols = - subject_var,
names_to = "Type",
values_to = "Percentage") %>%
mutate_at(.vars = vars("Type"),
.funs = list(~ str_to_title(gsub(".*_","",.)))
) %>%
filter(Type %in% group_vec)
}
prep_data(my_data[[5]], "Sources_of_income", c("Respondents","Year.2018")) %>%
filter(!Sources_of_income %in% c("Respondents","Total","Don't Know/No Answer")) %>%
mutate(Sources_of_income = as.factor(Sources_of_income)) %>%
pivot_wider(names_from = "Type", values_from = "Percentage")%>%
mutate(mydiff = Respondents - Year.2018) %>%
mutate(Sources_of_income = fct_reorder(Sources_of_income, abs(mydiff)))
# Function to prepare data for visualization
prep_data <- function(df, subject_var, group_vec){
df %>%
select(subject_var, contains("Percent") | contains("2018")) %>%
rename_with(paste("Year",gsub(".*_","",., fixed = TRUE),sep = "."), contains("2018")) %>%
pivot_longer(cols = - subject_var,
names_to = "Type",
values_to = "Percentage") %>%
mutate_at(.vars = vars("Type"),
.funs = list(~ str_to_title(gsub(".*_","",.)))
) %>%
filter(Type %in% group_vec)
}
prep_data(my_data[[5]], "Sources_of_income", c("Respondents","Year.2018")) %>%
filter(!Sources_of_income %in% c("Respondents","Total","Don't Know/No Answer")) %>%
mutate(Sources_of_income = as.factor(Sources_of_income)) %>%
pivot_wider(names_from = "Type", values_from = "Percentage")%>%
mutate(mydiff = Respondents - Year.2018) %>%
mutate(Sources_of_income = fct_reorder(Sources_of_income, abs(mydiff)))
# Function to prepare data for visualization
prep_data <- function(df, subject_var, group_vec){
df %>%
select(subject_var, contains("Percent") | contains("2018")) %>%
rename_with(~ paste("Year",gsub(".*_","",.x, fixed = TRUE),sep = "."), contains("2018")) %>%
pivot_longer(cols = - subject_var,
names_to = "Type",
values_to = "Percentage") %>%
mutate_at(.vars = vars("Type"),
.funs = list(~ str_to_title(gsub(".*_","",.)))
) %>%
filter(Type %in% group_vec)
}
prep_data(my_data[[5]], "Sources_of_income", c("Respondents","Year.2018")) %>%
filter(!Sources_of_income %in% c("Respondents","Total","Don't Know/No Answer")) %>%
mutate(Sources_of_income = as.factor(Sources_of_income)) %>%
pivot_wider(names_from = "Type", values_from = "Percentage")%>%
mutate(mydiff = Respondents - Year.2018) %>%
mutate(Sources_of_income = fct_reorder(Sources_of_income, abs(mydiff)))
prep_data(my_data[[5]], "Sources_of_income", c("Respondents","Year.2018")) %>%
filter(!Sources_of_income %in% c("Respondents","Total","Don't Know/No Answer")) %>%
mutate(Sources_of_income = as.factor(Sources_of_income)) %>%
pivot_wider(names_from = "Type", values_from = "Percentage")
prep_data(my_data[[5]], "Sources_of_income", c("Respondents","2018")) %>%
filter(!Sources_of_income %in% c("Respondents","Total","Don't Know/No Answer")) %>%
mutate(Sources_of_income = as.factor(Sources_of_income)) %>%
pivot_wider(names_from = "Type", values_from = "Percentage")
prep_data(my_data[[5]], "Sources_of_income", c("Respondents","2018")) %>%
filter(!Sources_of_income %in% c("Respondents","Total","Don't Know/No Answer")) %>%
mutate(Sources_of_income = as.factor(Sources_of_income)) %>%
pivot_wider(names_from = "Type", values_from = "Percentage") %>%
mutate(mydiff = Respondents - Year.2018) %>%
mutate(Sources_of_income = fct_reorder(Sources_of_income, abs(mydiff)))
# Function to prepare data for visualization
prep_data <- function(df, subject_var, group_vec){
df %>%
select(subject_var, contains("Percent") | contains("2018")) %>%
rename_with(~ paste("Year",gsub(".*_","",.x, fixed = TRUE),sep = "."), contains("2018")) %>%
pivot_longer(cols = - subject_var,
names_to = "Type",
values_to = "Percentage") %>%
mutate_at(.vars = vars("Type"),
.funs = list(~ str_to_title(gsub(".*_","",.)))
) %>%
filter(Type %in% group_vec)
}
prep_data(my_data[[5]], "Sources_of_income", c("Respondents","2018")) %>%
filter(!Sources_of_income %in% c("Respondents","Total","Don't Know/No Answer")) %>%
mutate(Sources_of_income = as.factor(Sources_of_income)) %>%
pivot_wider(names_from = "Type", values_from = "Percentage") %>%
mutate(mydiff = Respondents - Year.2018) %>%
mutate(Sources_of_income = fct_reorder(Sources_of_income, abs(mydiff)))
df %>%
select(subject_var, contains("Percent") | contains("2018")) %>%
rename_with(~ paste("Year",gsub(".*_","",.x, fixed = TRUE)), contains("2018")) %>%
pivot_longer(cols = - subject_var,
names_to = "Type",
values_to = "Percentage") %>%
mutate_at(.vars = vars("Type"),
.funs = list(~ str_to_title(gsub(".*_","",.)))
) %>%
filter(Type %in% group_vec)
prep_data(my_data[[5]], "Sources_of_income", c("Respondents","2018")) %>%
filter(!Sources_of_income %in% c("Respondents","Total","Don't Know/No Answer")) %>%
mutate(Sources_of_income = as.factor(Sources_of_income)) %>%
pivot_wider(names_from = "Type", values_from = "Percentage")
rename_if
?rename_if
shiny::runApp('code/03_shiny_app')
runApp('code/03_shiny_app')
prep_data(my_data[[5]], "Sources_of_income", groups()) %>%
filter(!Sources_of_income %in% c("Respondents","Total","Don't Know/No Answer")) %>%
mutate(Sources_of_income = as.factor(Sources_of_income)) %>%
pivot_wider(names_from = "Type", values_from = "Percentage") %>%
rename_with(~ case_when(. == "2018" ~ "Year.2018",
TRUE ~ .))
prep_data(my_data[[5]], "Sources_of_income", c("Respondents","2018")) %>%
filter(!Sources_of_income %in% c("Respondents","Total","Don't Know/No Answer")) %>%
mutate(Sources_of_income = as.factor(Sources_of_income)) %>%
pivot_wider(names_from = "Type", values_from = "Percentage") %>%
rename_with(~ case_when(. == "2018" ~ "Year.2018",
TRUE ~ .))
runApp('code/03_shiny_app')
? .data
runApp('code/03_shiny_app')
runApp('code/03_shiny_app')
shiny::runApp('code/03_shiny_app')
